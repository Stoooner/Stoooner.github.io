<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Stoner的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-07-25T03:15:08.511Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Stoner</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数字视频编码技术原理</title>
    <link href="http://yoursite.com/2020/07/25/%E6%95%B0%E5%AD%97%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/"/>
    <id>http://yoursite.com/2020/07/25/%E6%95%B0%E5%AD%97%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/</id>
    <published>2020-07-25T02:37:45.000Z</published>
    <updated>2020-07-25T03:15:08.511Z</updated>
    
    <content type="html"><![CDATA[<p><strong>内容说明</strong>：关于《数字视频编码技术》相关书籍的知识点记录.<br><a id="more"></a></p><h2 id="1-第1章-概论"><a href="#1-第1章-概论" class="headerlink" title="1. 第1章 概论"></a>1. 第1章 概论</h2><h3 id="1-0-前言"><a href="#1-0-前言" class="headerlink" title="1.0 前言"></a>1.0 前言</h3><blockquote><ol><li>一帧图像：视频是按一定时间间隔获取的图像序列，序列中的一幅图像也被成为<strong>一帧图像</strong>；</li><li>数字化：为了处理、传输和存储方便，需要将图像在空间上的连续模拟量进行采样和量化，将其变为数字量的过程；</li><li>模拟视频信号在数字化过程中的过采样是导致数字视频中存在大量的数据冗余的根本原因。</li><li>在实际使用中，由于很难测定图像信号的频率，人们通常简单地将图像按照一个约定俗成的密度进行采样，例如每行$1920$个采样点，每幅图像$1080$行等。每个采样点得到的数据成为<strong>像素</strong>，一幅图像采样的行数和列数称为图像的<strong>分辨率</strong>。</li></ol></blockquote><h3 id="1-1-视觉感知"><a href="#1-1-视觉感知" class="headerlink" title="1.1 视觉感知"></a>1.1 视觉感知</h3><blockquote><ol><li>光源的能量使用<strong>光通量</strong>度量，<strong>光通量</strong>是<strong>每单位时间到达、离开或通过曲面的光能数量。</strong>光通量的单位是<strong>流明</strong>，记作：$lm$，指的是每瓦激发光源的辐射光能；</li><li>人的视觉系统<strong>human visual system(HVS)</strong>对光的感知具有融合处理能力，可以将三种基色视锥细胞的输出融合为<strong>亮度(Y)</strong>和<strong>色度/色饱和度(U、V)</strong>；</li></ol></blockquote><h3 id="1-2-数字视频"><a href="#1-2-数字视频" class="headerlink" title="1.2 数字视频"></a>1.2 数字视频</h3><blockquote><ol><li>一个数字视频系统包含采集（照相机、摄像机等）、处理（压缩、传输及解码等）和显示等几个重要模块。</li><li><strong>图像传感器（sensor）</strong>：<strong>电耦合器（CCD）</strong>和<strong>互补性氧化金属半导体（CMOS）</strong> ，其中<strong>CCD</strong>由高感光度的半导体材料构成，可以将光信号转化为电信号，所有感光单元产生的信号组合起来构成一副完整的数字图像，<strong>CCD</strong>的输出是模拟信号，连续的模拟信号通过模数转换器（A/D）转换成数字信号，<strong>CCD</strong>在扫描所有数据后将信号放大，而<strong>CMOS</strong>每扫描一个像素即刻对信号进行放大，因此用很少的能量消耗就可以进行快速扫描，<strong>CCD</strong>成像质量优于<strong>CMOS</strong>，但是成本更高；</li><li>二维视频图像的视觉质量受到单位面积采样点多少(解析度)的影响，对同样面积的视频场景，如果用高解析度的图像来表示会有更清晰的效果，相反低解析度的图像会导致模糊的效果；</li><li>通过在不同时间点上采样二维的视频场景图像，可以得到视频的多个时间采样点，数字视频序列就是由一段时间间隔内的空间采样点组成的；</li></ol></blockquote><h4 id="1-2-2-色彩空间"><a href="#1-2-2-色彩空间" class="headerlink" title="1.2.2 色彩空间"></a>1.2.2 色彩空间</h4><blockquote><ol><li>常用的色彩空间表示方法由<strong>RGB</strong>和<strong>YUV</strong>等。用<strong>RGB</strong>色彩空间表示视频图像时，一个像素需要用三个样值(即<strong>R</strong>、<strong>G</strong>、<strong>B</strong>三个色度值)表示，若每种色度成分用<strong>8 bit</strong>表示，那么彩色图像的一个像素需要<strong>24 bit</strong>表示；</li><li>人类的视觉系统对亮度的感知比对色度的感知更加敏感，因此将色彩空间分解为亮度(<strong>Y</strong>)和色度(<strong>U、V</strong>)两个基本成分，根据对<strong>Y、U、V</strong>三个分量的采样比率不同，数字视频图像可分为$4:2:0、4:2:2、4:4:4$；<br><img src= "/img/loading.gif" data-src="/2020/07/25/%E6%95%B0%E5%AD%97%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/1595405121362.png" alt="Alt text"><br><img src= "/img/loading.gif" data-src="/2020/07/25/%E6%95%B0%E5%AD%97%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/1595405109994.png" alt="Alt text"><br><img src= "/img/loading.gif" data-src="/2020/07/25/%E6%95%B0%E5%AD%97%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/1595405135108.png" alt="Alt text"><br><img src= "/img/loading.gif" data-src="/2020/07/25/%E6%95%B0%E5%AD%97%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/1595405149289.png" alt="Alt text"></li><li><img src= "/img/loading.gif" data-src="/2020/07/25/%E6%95%B0%E5%AD%97%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/1595405297957.png" alt="Alt text"></li></ol></blockquote><h4 id="1-2-3-视频格式"><a href="#1-2-3-视频格式" class="headerlink" title="1.2.3 视频格式"></a>1.2.3 视频格式</h4><blockquote><ol><li>一帧图像的像素点按行排列可以分为偶数行和奇数行，如果偶数行和奇数行的像素是在相同时间点采样得到的，则称该帧为<strong>逐行帧</strong>；如果偶数行和奇数行的像素在不同的时间点采样得到的，则该帧成为<strong>隔行帧</strong>，<strong>隔行帧</strong>中所有偶数行构成该图像的订场，所有奇数行构成该图像的低场；</li><li>视频在获取或者显示的时候，每秒钟按逐行扫描处理的图像数成为帧率，每秒钟按隔行扫描处理的图像数称为场率，例如每秒25帧或者50场等；</li></ol></blockquote><h3 id="1-3-视频数据冗余"><a href="#1-3-视频数据冗余" class="headerlink" title="1.3 视频数据冗余"></a>1.3 视频数据冗余</h3><blockquote><ol><li>从数字信号的统计特征方面，一般将这些数据冗余分成<strong>空间冗余、时间冗余和信息熵冗余</strong>三大类；<br><img src= "/img/loading.gif" data-src="/2020/07/25/%E6%95%B0%E5%AD%97%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/1595406584850.png" alt="Alt text"></li><li></li></ol></blockquote><h2 id="2-第2章-视频编码基础"><a href="#2-第2章-视频编码基础" class="headerlink" title="2. 第2章 视频编码基础"></a>2. 第2章 视频编码基础</h2><h3 id="2-2-香农编码定理"><a href="#2-2-香农编码定理" class="headerlink" title="2.2 香农编码定理"></a>2.2 香农编码定理</h3><ol><li><strong>离散无记忆(memoryless)信源：</strong>离散信源的一种类型. 若表示信源输出消息的随机变量序列是一个<strong>相互独立同分布的随机变量序列</strong>，在此情况下，信源先后发出的一个个符号是统计独立同分布的，即对任意正整数$N$，其$N$维联合概率分布满足：<script type="math/tex; mode=display">P(X_1, X2, ..., X_N) = \prod_{i=i}^N P(X_i)</script>换句话说，随机变量序列中的任意$N$维随机变量的联合概率分布可用随机变量中单个随机变量的概率分布的乘积来表示。这种信源称为<strong>离散无记忆信源</strong>。离散无记忆信源可用它输出的一个随机变量$X$来表示。离散无记忆信源是最简单的离散信源，可以用完备的离散型概率空间来描述，其主要特点是离散和无记忆。离散指的是信源可能输出的消息的种类是有限的或者是可数的。消息的样本空间R是一个离散集合。由于信源的每一次输出都是按照消息发生的概率输出R中的一种消息，因此信源输出的消息可以用离散随机变量X表示。无记忆是指不同的信源输出消息之间相互独立。（<a href="https://baike.baidu.com/item/%E7%A6%BB%E6%95%A3%E6%97%A0%E8%AE%B0%E5%BF%86%E4%BF%A1%E6%BA%90/19141006?fr=aladdin" target="_blank" rel="noopener">百度百科——离散无记忆信源</a>）</li></ol><hr><ol><li>目前主流的视频编码器采用的技术主要有<strong>预测、变换、量化、熵编码和环路滤波</strong>，这些技术在编码器中的基本次序关系如下图。主流的编码方法都是将图像划分成块进行编码，其中第二代标准都是划分成$16 \times 16$的宏块，第三代标准引入了更大块的划分，比如最大可到$64 \times 64$块的编码单元，以编码单元为单位进行编码。将每帧图像进行划分后，按照从上之下，从左至右的顺序对每个划分进行处理。<br><img src= "/img/loading.gif" data-src="/2020/07/25/%E6%95%B0%E5%AD%97%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/1595473825907.png" alt="Alt text"></li></ol><hr><ol><li><a href="https://zhuanlan.zhihu.com/p/75804693" target="_blank" rel="noopener">知乎专栏—码率是什么？比特率是干嘛的？帧速率是啥？分辨率又是什么？</a></li><li><a href="https://zhuanlan.zhihu.com/p/27037506" target="_blank" rel="noopener">知乎专栏—视频码率；</a></li><li><a href="https://www.zhihu.com/question/27460676/answer/36736875" target="_blank" rel="noopener">知乎—视频音频比特率（码率）与采样率有什么联系？</a></li><li><a href="http://tv.zol.com.cn/621/6216268.html" target="_blank" rel="noopener">网站视频不清晰?浅谈不可忽视的比特成本</a></li><li><a href="https://blog.csdn.net/tkp2014/article/details/51111303?locationNum=1&amp;fps=1" target="_blank" rel="noopener">什么是码率？</a></li><li><img src= "/img/loading.gif" data-src="/2020/07/25/%E6%95%B0%E5%AD%97%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/1595475863722.png" alt="Alt text"></li><li><img src= "/img/loading.gif" data-src="/2020/07/25/%E6%95%B0%E5%AD%97%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/1595475895327.png" alt="Alt text"><br><img src= "/img/loading.gif" data-src="/2020/07/25/%E6%95%B0%E5%AD%97%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/1595475907316.png" alt="Alt text"><br><img src= "/img/loading.gif" data-src="/2020/07/25/%E6%95%B0%E5%AD%97%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/1595475942755.png" alt="Alt text"><br><img src= "/img/loading.gif" data-src="/2020/07/25/%E6%95%B0%E5%AD%97%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/1595475950952.png" alt="Alt text"><br><img src= "/img/loading.gif" data-src="/2020/07/25/%E6%95%B0%E5%AD%97%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/1595475987968.png" alt="Alt text"><br><img src= "/img/loading.gif" data-src="/2020/07/25/%E6%95%B0%E5%AD%97%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/1595476029260.png" alt="Alt text"><br><img src= "/img/loading.gif" data-src="/2020/07/25/%E6%95%B0%E5%AD%97%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/1595476020931.png" alt="Alt text"><br><img src= "/img/loading.gif" data-src="/2020/07/25/%E6%95%B0%E5%AD%97%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/1595476043686.png" alt="Alt text"><br><img src= "/img/loading.gif" data-src="/2020/07/25/%E6%95%B0%E5%AD%97%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/1595476080072.png" alt="Alt text"><br><img src= "/img/loading.gif" data-src="/2020/07/25/%E6%95%B0%E5%AD%97%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/1595476091251.png" alt="Alt text"><br><img src= "/img/loading.gif" data-src="/2020/07/25/%E6%95%B0%E5%AD%97%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/1595476108553.png" alt="Alt text"><br><img src= "/img/loading.gif" data-src="/2020/07/25/%E6%95%B0%E5%AD%97%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/1595476117468.png" alt="Alt text"><br><img src= "/img/loading.gif" data-src="/2020/07/25/%E6%95%B0%E5%AD%97%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/1595478722039.png" alt="Alt text"><br><img src= "/img/loading.gif" data-src="/2020/07/25/%E6%95%B0%E5%AD%97%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/1595478748680.png" alt="Alt text"><br><img src= "/img/loading.gif" data-src="/2020/07/25/%E6%95%B0%E5%AD%97%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/1595478780251.png" alt="Alt text"><blockquote><ol><li><a href="https://www.jianshu.com/p/028196b8ca14" target="_blank" rel="noopener">码率，分辨率，帧率 …</a></li><li><a href="https://www.cnblogs.com/yongdaimi/p/10651537.html" target="_blank" rel="noopener">音视频编解码: 比特率 码率</a></li><li><a href="https://www.cnblogs.com/linuxAndMcu/p/12113242.html" target="_blank" rel="noopener">音视频基础知识—-音频编码格式（转）</a></li><li><a href="https://juejin.im/post/5cf07dfdf265da1b8466ca8c" target="_blank" rel="noopener">视频的基本参数及H264编解码相关概念</a></li><li><a href="https://www.codercto.com/a/87804.html" target="_blank" rel="noopener">ios平台实现视频H264硬编码及软编码(附完整demo)</a></li><li><a href="https://blog.csdn.net/weixin_34004750/article/details/91469605" target="_blank" rel="noopener">ios视频实现H264硬编码和软编码编译ffmpeg库及环境搭建(附完整demo)</a></li><li><a href="https://wenku.baidu.com/view/583082be590216fc700abb68a98271fe900eaf67.html" target="_blank" rel="noopener">离散无记忆的扩展信源.PPT</a></li><li><a href="https://wenku.baidu.com/view/4a2b33666ad97f192279168884868762caaebbf1.html" target="_blank" rel="noopener">二次扩展信源的熵2.PPT</a></li><li><a href="https://www.cnblogs.com/tid-think/p/10616789.html" target="_blank" rel="noopener">图像原始格式(YUV444 YUV422 YUV420)一探究竟</a></li><li><a href="https://blog.csdn.net/xjhhjx/article/details/80291465" target="_blank" rel="noopener">YUV图解 （YUV444, YUV422, YUV420, YV12, NV12, NV21）</a></li><li><a href="https://www.cnblogs.com/ziyi--caolu/p/8034367.html" target="_blank" rel="noopener">直播一：H.264编码基础知识详解</a></li><li><a href="https://www.cnblogs.com/imstudy/p/11887915.html" target="_blank" rel="noopener">零基础，史上最通俗视频编码技术入门（重要）</a></li><li><a href="http://www.52im.net/thread-228-1-1.html" target="_blank" rel="noopener">即时通讯音视频开发（一）：视频编解码之理论概述</a></li></ol></blockquote></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;内容说明&lt;/strong&gt;：关于《数字视频编码技术》相关书籍的知识点记录.&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>模组与电脑连接的整体步骤</title>
    <link href="http://yoursite.com/2020/07/21/1-%E6%A8%A1%E7%BB%84%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/"/>
    <id>http://yoursite.com/2020/07/21/1-%E6%A8%A1%E7%BB%84%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/</id>
    <published>2020-07-21T13:35:05.000Z</published>
    <updated>2020-07-25T03:14:59.010Z</updated>
    
    <content type="html"><![CDATA[<p><strong>内容说明</strong>：记录整个模组与电脑连接的相关步骤，便于记录和后续查看.<br><a id="more"></a></p><h2 id="1-模组样式及所需线材"><a href="#1-模组样式及所需线材" class="headerlink" title="1. 模组样式及所需线材"></a>1. 模组样式及所需线材</h2><p><strong>模组样式：</strong><br><img src= "/img/loading.gif" data-src="/2020/07/21/1-%E6%A8%A1%E7%BB%84%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/1.1.jpg" alt="Alt text"><br><strong>所需线材：</strong><br><img src= "/img/loading.gif" data-src="/2020/07/21/1-%E6%A8%A1%E7%BB%84%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/1.2.jpg" alt="Alt text"><br><img src= "/img/loading.gif" data-src="/2020/07/21/1-%E6%A8%A1%E7%BB%84%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/1.3.jpg" alt="Alt text"><br><img src= "/img/loading.gif" data-src="/2020/07/21/1-%E6%A8%A1%E7%BB%84%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/1.4.jpg" alt="Alt text"></p><h2 id="2-模组对应线材的连接方式"><a href="#2-模组对应线材的连接方式" class="headerlink" title="2. 模组对应线材的连接方式"></a>2. 模组对应线材的连接方式</h2><ol><li>首先将电源线与模组进行连接：、<br><img src= "/img/loading.gif" data-src="/2020/07/21/1-%E6%A8%A1%E7%BB%84%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/2.1.jpg" alt="Alt text"></li><li>然后将网线的一段连接到模组对应的接口：<br><img src= "/img/loading.gif" data-src="/2020/07/21/1-%E6%A8%A1%E7%BB%84%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/2.2.jpg" alt="Alt text"><br>相应的，网线的另一端连接到电脑的网线接口，使两个设备连接到同一个局域网中，方便进行连接，<strong>此时模组端的网线接口处闪现绿灯</strong>；<br><img src= "/img/loading.gif" data-src="/2020/07/21/1-%E6%A8%A1%E7%BB%84%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/a.jpeg" alt="Alt text"></li><li>将一段有特殊细长方口、另一端则是<strong>USB</strong>接口的线分别连接模组和电脑对应接口:<br><img src= "/img/loading.gif" data-src="/2020/07/21/1-%E6%A8%A1%E7%BB%84%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/b.jpeg" alt="Alt text"><br>当此线分别连接模组和电脑之后，在电脑端会自动出现相应的提示框提示连接到了相应的设备：<br><img src= "/img/loading.gif" data-src="/2020/07/21/1-%E6%A8%A1%E7%BB%84%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/1.png" alt="Alt text"><br>相应的，在电脑的设备管理器中也能看到相应的设备，其中<strong>COM3</strong>是设备的名称；<br><img src= "/img/loading.gif" data-src="/2020/07/21/1-%E6%A8%A1%E7%BB%84%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/2.png" alt="Alt text"></li></ol><ul><li>【备注】<strong>串行接口：</strong>简称串口，也称串行通信接口或串行通讯接口（通常指<strong>COM接口</strong>），是采用串行通信方式的扩展接口。串行接口 （<strong>Serial Interface</strong>）是指数据一位一位地顺序传送。其特点是通信线路简单，只要一对传输线就可以实现双向通信（可以直接利用电话线作为传输线），从而大大降低了成本，特别适用于远距离通信，但传送速度较慢。</li></ul><ol><li><p>点击提示框中的确定，然后打开<strong>XShell</strong>进行接下来的连接操作。在<strong>XShell</strong>中新建会话，设置相应的会话信息，点击<strong>SERIAL</strong>(串口设备)，填写会话名称，名称可随意设定，协议栏选择<strong>SERIAL</strong>：<br><img src= "/img/loading.gif" data-src="/2020/07/21/1-%E6%A8%A1%E7%BB%84%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/3.png" alt="Alt text"></p></li><li><p>然后再次点击左边<strong>SERIAL</strong>，出现下图右边的情况，其中<strong>Port</strong>选择现在连接的模组设备的名称，也即<strong>COM3</strong>；<strong>Baud Rate</strong>设定为<strong>115200</strong>，然后剩下的选项不动，点击下方的连接按钮：<br><img src= "/img/loading.gif" data-src="/2020/07/21/1-%E6%A8%A1%E7%BB%84%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/4.png" alt="Alt text"></p></li></ol><ol><li><p>连接成功的话可以看到下面几幅图的样子，其中模组内部其实是一个<strong>Linux</strong>系统，因此连接成功后会出现让你<strong>login</strong>的语句，其中登陆名为<strong>root</strong>，无登陆密码：<br><img src= "/img/loading.gif" data-src="/2020/07/21/1-%E6%A8%A1%E7%BB%84%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/5.png" alt="Alt text"><br><img src= "/img/loading.gif" data-src="/2020/07/21/1-%E6%A8%A1%E7%BB%84%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/6.png" alt="Alt text"><br><img src= "/img/loading.gif" data-src="/2020/07/21/1-%E6%A8%A1%E7%BB%84%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/7.png" alt="Alt text"></p></li><li><p>登陆成功之后，按照<strong>《Goke 固件组 EVB基础操作中》</strong>的第10页PPT的两句命令进行执行：</p><pre><code> init.sh adidemo -a</code></pre></li><li>执行完毕之后查看电脑的<strong>ip地址</strong>与模组的<strong>ip地址</strong>：<br><img src= "/img/loading.gif" data-src="/2020/07/21/1-%E6%A8%A1%E7%BB%84%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/9.png" alt="Alt text"><br><img src= "/img/loading.gif" data-src="/2020/07/21/1-%E6%A8%A1%E7%BB%84%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/8.png" alt="Alt text"><br>可以发现，两者的<strong>ip地址</strong>并不相同，可以通过：<pre><code> ifconfig eth0 169.254.28.10</code></pre>将两者<strong>ip地址</strong>统一到一起；</li></ol><ul><li>【备注】<strong>eth0代表的是第一块物理网卡，更多的解释请参照：<a href="https://blog.csdn.net/pzqingchong/article/details/75675618" target="_blank" rel="noopener">CSDN-eth0 eth0:1 eth0.1 的区别</a></strong></li></ul><ol><li><p>然后根据<strong>《Goke 固件组 EVB基础操作中》</strong>的第11页PPT中网络查看的内容，打开软件<strong>VLC</strong>，点击左上角的<strong>媒体——打开网络串流</strong>，然后在框中输入：</p><pre><code> rtsp://169.254.28.10/stream0</code></pre><p>其中169.254.28.10即是我们为模组设定的IP地址。<br><img src= "/img/loading.gif" data-src="/2020/07/21/1-%E6%A8%A1%E7%BB%84%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/1595327517526.png" alt="Alt text"><br>点击播放按钮，就能看到模组的摄像头模块中拍摄到的实际画面了：<br><img src= "/img/loading.gif" data-src="/2020/07/21/1-%E6%A8%A1%E7%BB%84%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/1595327636347.png" alt="Alt text"></p></li><li><p>最后关闭模组的时候直接拔出相应的插头即可。</p></li></ol><h2 id="3-注意事项"><a href="#3-注意事项" class="headerlink" title="3. 注意事项"></a>3. 注意事项</h2><ol><li>需要测试模组上的摄像头模块是否正常的时候需要在登陆模组的<strong>Linux系统</strong>之后，输入下面命令：<pre><code> init.sh adidemo -a</code></pre>进入到<strong>adi@goke#</strong>用户才能测试摄像头；<br><img src= "/img/loading.gif" data-src="/2020/07/21/1-%E6%A8%A1%E7%BB%84%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/1595382610141.png" alt="Alt text"></li><li>进行<strong>XML配置</strong>的时候，首先需要退出<strong>adi@goke#</strong>用户到<strong>root</strong>目录下：<br><img src= "/img/loading.gif" data-src="/2020/07/21/1-%E6%A8%A1%E7%BB%84%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/1595382673519.png" alt="Alt text"><br>然后进入<strong>/usr/local/bin</strong>目录中，使用<strong>vi video.xml</strong>进行<strong>xml</strong>文件的查看和修改：<br><img src= "/img/loading.gif" data-src="/2020/07/21/1-%E6%A8%A1%E7%BB%84%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/1595382872449.png" alt="Alt text"><br><img src= "/img/loading.gif" data-src="/2020/07/21/1-%E6%A8%A1%E7%BB%84%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/1595382906306.png" alt="Alt text"><blockquote><p><strong>需要注意的是</strong>：<strong>Stream下的</strong>$<type>3</type>$中的<strong>3</strong>代表的是<strong>H.265</strong>，<strong>2</strong>代表的是<strong>JPEG</strong>，<strong>1</strong>代表的是<strong>H.264</strong>，<strong>0</strong>代表开关，需要注意的是<strong>Stream0/1/2/3</strong>这四个流可以同时都打开，相应的在<strong>VLC</strong>中展示的时候就可以出现多个窗口了；</p></blockquote></li></ol><h2 id="4-video-xml文件代码分析"><a href="#4-video-xml文件代码分析" class="headerlink" title="4. video.xml文件代码分析"></a>4. video.xml文件代码分析</h2><ol><li><p><strong>vin</strong>区域的代码：<br><img src= "/img/loading.gif" data-src="/2020/07/21/1-%E6%A8%A1%E7%BB%84%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/1595385044147.png" alt="Alt text"><br>进入到<strong>video.xml</strong>文件中，<strong>vin</strong>包含的是摄像头固件的相应信息，其中：</p><p> <vi_width_a>1920</vi_width_a>代表摄像头的分辨率宽度为1920；<br> <vi_height_a>1080</vi_height_a>代表摄像头的分辨率高度为1080；<br> <vi_framerate_a>25</vi_framerate_a>代表摄像头的帧率FPS为25；<br>需要注意的是，上述的摄像头的参数是有上限和下限，不能过高或者过低，这是硬件的限制，如果设定的值过高或者过低，将造成摄像头无法正常工作，相应的，无法通过命令行进入到<strong>adi@goke#</strong>用户，也就无法拍摄到图像了。</p></li><li><p><strong>Stream</strong>区域的代码：<br><img src= "/img/loading.gif" data-src="/2020/07/21/1-%E6%A8%A1%E7%BB%84%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/1595385764935.png" alt="Alt text"><br>模组仅有一个输入模块，也即摄像头，但是输出的流<strong>Stream</strong>却有多个，在上图中即可通过：</p><p> <StreamSetting num="4"><br>可以看出输出的流有<strong>4</strong>个。其中在<strong>Stream0</strong>中：</StreamSetting></p></li></ol><pre><code>&lt;type&gt;3&lt;/type&gt;代表图像的编码格式为3-H.265,2-JPEG,1-H.264,0-代表开关，需要注意的是Stream0/1/2/3这四个流可以同时都打开，相应的在VLC中展示的时候就可以出现多个窗口了;&lt;width&gt;1280&lt;/width&gt;代表输出流Stream0的图像分辨率宽度为1920；&lt;height&gt;720&lt;/height&gt;代表输出流Stream0的图像分辨率高度为1080；&lt;fps&gt;25&lt;/fps&gt;代表输出流Stream0的帧率FPS为25；</code></pre><blockquote><p><strong>注意：</strong>输出流的一些参数受限于摄像头的对应参数，比方说分辨率或者帧率，输出流的分辨率只能小于等于$1920\times1080$，因为这是摄像头的硬件极限，过大或者过小都会造成摄像头无法正常工作，相应的参数如帧率也是同样的道理。这里大概测试了一下<strong>Stream0</strong>在分辨率上的下限为$720\times480$，帧率的下限为$10 FPS$.</p></blockquote><h2 id="5-一些其他需要补充的知识点"><a href="#5-一些其他需要补充的知识点" class="headerlink" title="5. 一些其他需要补充的知识点"></a>5. 一些其他需要补充的知识点</h2><blockquote><ol><li><a href="https://blog.csdn.net/pc9319/article/details/79621352" target="_blank" rel="noopener">码率（Bitrate）、帧率（FPS）、分辨率和清晰度的联系与区别；</a></li><li><a href="https://blog.csdn.net/leixiaohua1020/article/details/18893769" target="_blank" rel="noopener">[总结]视音频编解码技术零基础学习方法；</a></li><li><a href="https://www.cnblogs.com/xkfz007/category/322714.html" target="_blank" rel="noopener">视频编解码学习总结博客；</a></li><li><a href="https://blog.csdn.net/qq_41603966/article/details/97525277" target="_blank" rel="noopener">串口（串行接口）相关概念；</a></li><li><a href="https://www.cnblogs.com/dalyday/p/11380252.html" target="_blank" rel="noopener">win10下安装FFmpeg步骤；</a></li><li><a href="https://www.diangon.com/m417981.html" target="_blank" rel="noopener">模拟信号为什么叫模拟信号？它到底模拟了啥？</a></li><li><a href="http://www.pomeas.cn/mobile/newsview/581.html" target="_blank" rel="noopener">什么是逐行和隔行扫描？它们有什么优缺点？</a></li><li><a href="https://blog.csdn.net/xiaojun111111/article/details/70255048" target="_blank" rel="noopener">逐行与隔行扫描的区别和原理；</a></li></ol></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;内容说明&lt;/strong&gt;：记录整个模组与电脑连接的相关步骤，便于记录和后续查看.&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2020/07/20/hello-world/"/>
    <id>http://yoursite.com/2020/07/20/hello-world/</id>
    <published>2020-07-20T12:45:34.114Z</published>
    <updated>2020-07-21T14:48:57.185Z</updated>
    
    <content type="html"><![CDATA[<p><strong>内容说明：</strong>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="lang-bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="lang-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="lang-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="lang-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;内容说明：&lt;/strong&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
